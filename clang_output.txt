102264 warnings generated.
src/utils_aux.cc: clang-tidy-18 -p=build -line-filter=[{\"name\":\"src/cart_cell.cc\",\"lines\":[[1,321]]},{\"name\":\"src/cart_cell.h\",\"lines\":[[1,250]]},{\"name\":\"src/cart_tumor.cc\",\"lines\":[[1,133]]},{\"name\":\"src/cart_tumor.h\",\"lines\":[[1,36]]},{\"name\":\"src/diffusion_thomas_algorithm.cc\",\"lines\":[[1,319]]},{\"name\":\"src/diffusion_thomas_algorithm.h\",\"lines\":[[1,194]]},{\"name\":\"src/forces_tumor_cart.cc\",\"lines\":[[1,163]]},{\"name\":\"src/forces_tumor_cart.h\",\"lines\":[[1,60]]},{\"name\":\"src/hyperparams.h\",\"lines\":[[1,216]]},{\"name\":\"src/tumor_cell.cc\",\"lines\":[[1,673]]},{\"name\":\"src/tumor_cell.h\",\"lines\":[[1,301]]},{\"name\":\"src/utils_aux.cc\",\"lines\":[[1,176]]},{\"name\":\"src/utils_aux.h\",\"lines\":[[1,96]]}] --enable-check-profile -store-check-profile=clang-tidy-review-profile --config-file=.clang-tidy --export-fixes=/tmp/tmpb2o1s_sd/tmp_xr510k8.yaml src/utils_aux.cc
Suppressed 102378 warnings (102216 in non-user code, 162 NOLINT).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
/github/workspace/src/utils_aux.cc:23:1: warning: #includes are not sorted properly [llvm-include-order]
   23 | #include <cmath>
      | ^        ~~~~~~~
      |          "hyperparams.h"
   24 | #include <fstream>
      |          ~~~~~~~~~
      |          "tumor_cell.h"
   25 | #include <tuple>
      |          ~~~~~~~
      |          <cmath>
   26 | #include <vector>
      |          ~~~~~~~~
      |          <fstream>
   27 | #include "hyperparams.h"
      |          ~~~~~~~~~~~~~~~
      |          <tuple>
   28 | #include "tumor_cell.h"
      |          ~~~~~~~~~~~~~~
      |          <vector>
/github/workspace/src/utils_aux.cc:34:1: warning: no header providing "bdm::real_t" is directly included [misc-include-cleaner]
   27 | #include "hyperparams.h"
   28 | #include "tumor_cell.h"
   29 | 
   30 | namespace bdm {
   31 | 
   32 | // Samples a Gaussian value with given mean and standard deviation but all
   33 | // negative values are mapped to zero
   34 | real_t SamplePositiveGaussian(float mean, float sigma) {
      | ^
/github/workspace/src/utils_aux.cc:43:13: warning: no header providing "bdm::Real3" is directly included [misc-include-cleaner]
   27 | std::vector<Real3> CreateSphereOfTumorCells(real_t sphere_radius) {
      |             ^
/github/workspace/src/utils_aux.cc:45:3: warning: variable 'cell_radius' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   45 |   real_t cell_radius =
      |   ^
      |          const 
/github/workspace/src/utils_aux.cc:46:46: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   46 |       std::cbrt(kDefaultVolumeNewTumorCell * 6 / Math::kPi) / 2;
      |                                              ^
/github/workspace/src/utils_aux.cc:46:50: warning: no header providing "bdm::Math" is directly included [misc-include-cleaner]
   27 |       std::cbrt(kDefaultVolumeNewTumorCell * 6 / Math::kPi) / 2;
      |                                                  ^
/github/workspace/src/utils_aux.cc:51:3: warning: variable 'spacing_x' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   51 |   real_t spacing_x = cell_radius * std::sqrt(3.0);
      |   ^
      |          const 
/github/workspace/src/utils_aux.cc:51:46: warning: 3.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   51 |   real_t spacing_x = cell_radius * std::sqrt(3.0);
      |                                              ^
/github/workspace/src/utils_aux.cc:52:3: warning: variable 'spacing_y' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   52 |   real_t spacing_y = cell_radius * 2.0;
      |   ^
      |          const 
/github/workspace/src/utils_aux.cc:52:36: warning: 2.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   52 |   real_t spacing_y = cell_radius * 2.0;
      |                                    ^
/github/workspace/src/utils_aux.cc:53:3: warning: variable 'spacing_z' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   53 |   real_t spacing_z = cell_radius * std::sqrt(3.0);
      |   ^
      |          const 
/github/workspace/src/utils_aux.cc:53:46: warning: 3.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   53 |   real_t spacing_z = cell_radius * std::sqrt(3.0);
      |                                              ^
/github/workspace/src/utils_aux.cc:56:3: warning: Variable 'z' with floating point type 'real_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
   56 |   for (real_t z = -sphere_radius; z < sphere_radius; z += spacing_z, ++zc) {
      |   ^                               ~                  ~
/github/workspace/src/utils_aux.cc:56:3: note: Variable 'z' with floating point type 'real_t' should not be used as a loop counter
   56 |   for (real_t z = -sphere_radius; z < sphere_radius; z += spacing_z, ++zc) {
      |   ^                               ~                  ~
/github/workspace/src/utils_aux.cc:58:5: warning: Variable 'x' with floating point type 'real_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
   58 |     for (real_t x = -sphere_radius; x < sphere_radius; x += spacing_x, ++xc) {
      |     ^                               ~                  ~
/github/workspace/src/utils_aux.cc:58:5: note: Variable 'x' with floating point type 'real_t' should not be used as a loop counter
   58 |     for (real_t x = -sphere_radius; x < sphere_radius; x += spacing_x, ++xc) {
      |     ^                               ~                  ~
/github/workspace/src/utils_aux.cc:60:7: warning: Variable 'y' with floating point type 'real_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]
   60 |       for (real_t y = -sphere_radius; y < sphere_radius; y += spacing_y, ++yc) {
      |       ^                               ~                  ~
/github/workspace/src/utils_aux.cc:60:7: note: Variable 'y' with floating point type 'real_t' should not be used as a loop counter
   60 |       for (real_t y = -sphere_radius; y < sphere_radius; y += spacing_y, ++yc) {
      |       ^                               ~                  ~
/github/workspace/src/utils_aux.cc:62:9: warning: variable 'px' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   62 |         real_t px = x + (zc % 2) * 0.5 * cell_radius;
      |         ^
      |                const 
/github/workspace/src/utils_aux.cc:62:36: warning: 0.5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
   62 |         real_t px = x + (zc % 2) * 0.5 * cell_radius;
      |                                    ^
/github/workspace/src/utils_aux.cc:63:9: warning: variable 'py' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   63 |         real_t py = y + (xc % 2) * cell_radius;
      |         ^
      |                const 
/github/workspace/src/utils_aux.cc:64:9: warning: variable 'pz' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   64 |         real_t pz = z;
      |         ^
      |                const 
/github/workspace/src/utils_aux.cc:66:9: warning: variable 'dist' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   66 |         real_t dist = std::sqrt(px * px + py * py + pz * pz);
      |         ^
      |                const 
/github/workspace/src/utils_aux.cc:80:12: warning: no header providing "size_t" is directly included [misc-include-cleaner]
   24 | std::tuple<size_t, size_t, size_t, size_t, size_t, size_t, real_t>
      |            ^
/github/workspace/src/utils_aux.cc:92:30: warning: no header providing "bdm::Agent" is directly included [misc-include-cleaner]
   27 |   rm->ForEachAgent([&](const Agent* agent) {
      |                              ^
/github/workspace/src/utils_aux.cc:93:9: warning: 'auto *tumor_cell' can be declared as 'const auto *tumor_cell' [readability-qualified-auto]
   93 |     if (auto* tumor_cell = dynamic_cast<const TumorCell*>(agent)) {
      |         ^
      |         const 
/github/workspace/src/utils_aux.cc:96:7: warning: variable 'dist_sq' of type 'real_t' (aka 'double') can be declared 'const' [misc-const-correctness]
   96 |       real_t dist_sq = pos[0] * pos[0] + pos[1] * pos[1] + pos[2] * pos[2];
      |       ^
      |              const 
/github/workspace/src/utils_aux.cc:115:14: warning: 5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  115 |         case 5:
      |              ^
/github/workspace/src/utils_aux.cc:135:54: warning: no header providing "std::ios" is directly included [misc-include-cleaner]
   25 |     std::ofstream file("output/final_data.csv", std::ios::app);
      |                                                      ^
/github/workspace/src/utils_aux.cc:148:7: warning: variable 'total_minutes' of type 'double' can be declared 'const' [misc-const-correctness]
  148 |       double total_minutes =
      |       ^
      |              const 
/github/workspace/src/utils_aux.cc:150:7: warning: variable 'total_hours' of type 'double' can be declared 'const' [misc-const-correctness]
  150 |       double total_hours = total_minutes / 60.0;
      |       ^
      |              const 
/github/workspace/src/utils_aux.cc:150:44: warning: 60.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  150 |       double total_hours = total_minutes / 60.0;
      |                                            ^
/github/workspace/src/utils_aux.cc:151:7: warning: variable 'total_days' of type 'double' can be declared 'const' [misc-const-correctness]
  151 |       double total_days = total_hours / 24.0;
      |       ^
      |              const 
/github/workspace/src/utils_aux.cc:151:41: warning: 24.0 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
  151 |       double total_days = total_hours / 24.0;
      |                                         ^
/github/workspace/src/utils_aux.cc:154:14: warning: variable 'total_num_tumor_cells' is not initialized [cppcoreguidelines-init-variables]
  154 |       size_t total_num_tumor_cells;
      |              ^                    
      |                                    = 0
/github/workspace/src/utils_aux.cc:155:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  155 |       size_t num_tumor_cells_type1, num_tumor_cells_type2,
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |           num_tumor_cells_type3, num_tumor_cells_type4,
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |           num_tumor_cells_type5_dead;
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
/github/workspace/src/utils_aux.cc:155:14: warning: variable 'num_tumor_cells_type1' is not initialized [cppcoreguidelines-init-variables]
  155 |       size_t num_tumor_cells_type1, num_tumor_cells_type2,
      |              ^
note: this fix will not be applied because it overlaps with another fix
/github/workspace/src/utils_aux.cc:155:37: warning: variable 'num_tumor_cells_type2' is not initialized [cppcoreguidelines-init-variables]
  155 |       size_t num_tumor_cells_type1, num_tumor_cells_type2,
      |                                     ^
note: this fix will not be applied because it overlaps with another fix
/github/workspace/src/utils_aux.cc:156:11: warning: variable 'num_tumor_cells_type3' is not initialized [cppcoreguidelines-init-variables]
  156 |           num_tumor_cells_type3, num_tumor_cells_type4,
      |           ^
note: this fix will not be applied because it overlaps with another fix
/github/workspace/src/utils_aux.cc:156:34: warning: variable 'num_tumor_cells_type4' is not initialized [cppcoreguidelines-init-variables]
  156 |           num_tumor_cells_type3, num_tumor_cells_type4,
      |                                  ^
note: this fix will not be applied because it overlaps with another fix
/github/workspace/src/utils_aux.cc:157:11: warning: variable 'num_tumor_cells_type5_dead' is not initialized [cppcoreguidelines-init-variables]
  157 |           num_tumor_cells_type5_dead;
      |           ^
note: this fix will not be applied because it overlaps with another fix
/github/workspace/src/utils_aux.cc:158:14: warning: variable 'tumor_radius' is not initialized [cppcoreguidelines-init-variables]
   23 |       real_t tumor_radius;
      |              ^           
      |                           = NAN