name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.compiler }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ubu22-gcc
            os: ubuntu-22.04
            compiler: gcc

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          sudo apt-get update
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y gcc g++ cmake make
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          else
            sudo apt-get install -y clang cmake make
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi
      - name: Restore BDM Cache
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            biodynamo-*
          key: ${{ matrix.os }}

      - name: Build BDM if Cache is not found
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        run: |
          export GHA_BRANCH_NAME=v1.05
          export GHA_REPOSITORY=/BioDynaMo/biodynamo
          curl -s -S -L https://raw.githubusercontent.com/BioDynaMo/biodynamo/master/util/install | bash

      - name: Save Cache BDM
        uses: actions/cache/save@v4
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        with:
          path: |
            biodynamo-*
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Configure project
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: |
          cmake --build build -- -j$(nproc)

      - name: Run tests
        run: |
          ctest --test-dir build --output-on-failure

      - name: Setup tmate session
        if: ${{ !cancelled() && runner.debug }}
        uses: mxschmitt/action-tmate@v3
        # When debugging increase to a suitable value!
        timeout-minutes: 30
